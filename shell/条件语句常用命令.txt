bash中如何实现条件判断？
条件测试类型：
    整数测试
    字符测试
    文件测试

一、条件测试的表达式：
    [ expression ]  括号两端必须要有空格
    [[ expression ]] 括号两端必须要有空格
    test expression
    组合测试条件：
     -a: and
     -o: or
      !: 非


二、整数比较：
    -eq 测试两个整数是否相等
    -ne 测试两个整数是否不等
    -gt 测试一个数是否大于另一个数
    -lt 测试一个数是否小于另一个数
    -ge 大于或等于
    -le 小于或等于

命令间的逻辑关系
    逻辑与：&&
        第一个条件为假 第二个条件不用在判断，最总结果已经有
        第一个条件为真，第二个条件必须得判断
    逻辑或：||

三、字符串比较
    字符串比较：
       ==   等于  两边要有空格
       !=    不等
        >    大于
       <     小于
四、文件测试

     -z string 测试指定字符是否为空，空着真，非空为假
     -n string 测试指定字符串是否为不空，空为假 非空为真
    -e FILE 测试文件是否存在
    -f file 测试文件是否为普通文件
    -d file 测试指定路径是否为目录
    -r file 测试文件对当前用户是否可读
    -w file 测试文件对当前用户是否可写
    -x file 测试文件对当前用户是都可执行
    -z  是否为空  为空则为真
    -a  是否不空

五、if语法

if 判断条件 0为真 其他都为假

单分支if语句
if 判断条件；then
statement1
statement2
.......
fi

双分支的if语句：
if 判断条件；then
statement1
statement2
.....
else
statement3
statement4
fi

Note:
if语句进行判断是否为空
[ "$name” = "" ]
等同于
[ ! "$name" ]
[ -z "$name" ]    

Note:
使用if语句的时候进行判断如果是进行数值类的 ，建议使用 let(())进行判断
对于字符串等使用test[ ] or [[ ]] 进行判断
(())中变量是可以不使用$来引用的

example：表述数字范围的时候 可以使用if可以是使用case
if [ $x -gt 90 -o $x -lt 100 ]
case $x in
100)
9[0-9])

 


if [ "X$name" != "x" ]
这个语句的意思是如果$name为空，那么X=X成立折执行下面的结果；


写脚本的时候很多时候需要用到回传命令，$?如果上一个命令执行成功，回传值为0，否则为1~255之间的任何一个
    0为真
    非0为假

条件测试的写法：

1、  执行一个命令的结果
                   if grep -q "rm" fs.sh;then


2、传回一个命令执行结果的相反值
                   if ！grep -q "rm" fs.sh;then

 

3、使用复合命令（（算式））
                   if ((a>b));then


 4、使用bash关键字 [[判断式]]
                   if [[ str > xyz ]];then


 5、使用内置命令：test 判断式
                   if test "str" \> "xyz";then


 6、使用内置命令：[判断式]  类似test
                  if [ "str" \> "xyz" ];then


7、使用-a -o进行逻辑组合
                  [ -r filename -a -x filename ]


8、命令&&命令
                  if grep -q "rm" fn.sh && [ $a -lt 100 ];then

 

9、命令||命令
                 if grep -q "rm" fn.sh || [ $a -lt 100 ];then